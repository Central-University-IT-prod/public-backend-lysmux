"""Travels

Revision ID: 422970bbae1a
Revises: 8ae5d377b23e
Create Date: 2024-03-22 19:48:03.578607

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "422970bbae1a"
down_revision: Union[str, None] = "8ae5d377b23e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "travels",
        sa.Column(
            "id",
            sa.UUID(as_uuid=False),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("owner_id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["users.id"],
            name=op.f("fk_travels_owner_id_users"),
            ondelete="cascade"
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_travels")),
        sa.UniqueConstraint("name", "owner_id", name=op.f("uq_travels_name"))
    )
    op.create_table(
        "travel_locations",
        sa.Column(
            "id",
            sa.UUID(as_uuid=False),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False
        ),
        sa.Column("travel_id", sa.UUID(as_uuid=False), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("latitude", sa.Float(), nullable=False),
        sa.Column("longitude", sa.Float(), nullable=False),
        sa.Column("start_date", sa.Date(), nullable=False),
        sa.Column("end_date", sa.Date(), nullable=False),
        sa.ForeignKeyConstraint(
            ["travel_id"],
            ["travels.id"],
            name=op.f("fk_travel_locations_travel_id_travels"),
            ondelete="cascade"
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_travel_locations")),
        sa.UniqueConstraint("travel_id", "name", name=op.f("uq_travel_locations_travel_id"))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("travel_participants")
    op.drop_table("travel_locations")
    op.drop_table("travels")
    # ### end Alembic commands ###
